{"version":3,"sources":["CustomProgressBar.js","AddProgressBar.js","App.js","index.js"],"names":["CustomProgressBar","bgColor","completed","barStyle","height","width","backgroundColor","transition","borderRadius","textAlign","style","margin","padding","color","fontWeight","AddProgressBar","useState","setCompleted","useEffect","interval","setInterval","prev","clearInterval","App","state","setState","className","map","item","index","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEe,SAASA,EAAT,GAAoD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UAS7CC,EAAW,CACfC,OAAQ,OACRC,MAAM,GAAD,OAAKH,EAAL,KACLI,gBAAiBL,EACjBM,WAAY,uBACZC,aAAc,UACdC,UAAW,SAQb,OACE,qBAAKC,MAvBiB,CACtBN,OAAQ,GACRC,MAAO,OACPC,gBAAiB,SACjBE,aAAc,GACdG,OAAQ,UAkBR,SACE,qBAAKD,MAAOP,EAAZ,SACE,sBAAMO,MARO,CACjBE,QAAS,EACTC,MAAO,QACPC,WAAY,QAKR,mBAA6BZ,EAA7B,WCAOa,MAzBf,WACE,MAAkCC,mBAAS,GAA3C,mBAAOd,EAAP,KAAkBe,EAAlB,KAiBA,OAfAC,qBAAU,WACR,IAAIC,EAAWC,aACb,kBACEH,GAAa,SAACI,GACZ,OAAIA,EAAO,IACDA,EAAQ,IAEhBC,cAAcH,GACC,UAGrB,OAED,IAGD,8BACE,cAACnB,EAAD,CAAmBC,QAAS,UAAWC,UAAWA,O,MCDzCqB,MAlBf,WACE,MAA0BP,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAIA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,qBAAf,SACGF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,+BAAmBD,GAARC,QAIf,wBAAQC,QAXQ,WAClBL,EAAS,GAAD,mBAAKD,GAAL,CAAY,cAAC,EAAD,QAUlB,iCCZNO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e8efc09c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CustomProgressBar({ bgColor, completed }) {\r\n  const containerStyles = {\r\n    height: 20,\r\n    width: \"100%\",\r\n    backgroundColor: \"e0e0de\",\r\n    borderRadius: 50,\r\n    margin: \"20px 0\",\r\n  };\r\n\r\n  const barStyle = {\r\n    height: \"100%\",\r\n    width: `${completed}%`,\r\n    backgroundColor: bgColor,\r\n    transition: \"width 1s ease-in-out\",\r\n    borderRadius: \"inherit\",\r\n    textAlign: \"right\",\r\n  };\r\n\r\n  const labelStyle = {\r\n    padding: 5,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  };\r\n  return (\r\n    <div style={containerStyles}>\r\n      <div style={barStyle}>\r\n        <span style={labelStyle}>{`${completed}%`}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport CustomProgressBar from \"./CustomProgressBar\";\r\n\r\nfunction AddProgressBar() {\r\n  const [completed, setCompleted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(\r\n      () =>\r\n        setCompleted((prev) => {\r\n          if (prev < 100) {\r\n            return (prev += 10);\r\n          } else {\r\n            clearInterval(interval);\r\n            return (prev = 100);\r\n          }\r\n        }),\r\n      1000\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CustomProgressBar bgColor={\"#6a1b9a\"} completed={completed} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProgressBar;\r\n","import { useState } from \"react\";\nimport AddProgressBar from \"./AddProgressBar\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState([]);\n  const handleClick = () => {\n    setState([...state, <AddProgressBar />]);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"progress-container\">\n        {state.map((item, index) => (\n          <span key={index}>{item}</span>\n        ))}\n      </div>\n\n      <button onClick={handleClick}>Add ProgressBar</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}